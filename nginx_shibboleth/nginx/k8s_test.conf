# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream orc-site {
  server 194.95.75.9:30178; # private node ip
  server 194.95.75.10:30178;
}

upstream jhub {
  server 194.95.75.9:30180;
  server 194.95.75.10:30180;
}

upstream bhub {
  server 194.95.75.9:30181;
  server 194.95.75.10:30181;
}

upstream bjhub {
  server 194.95.75.9:30182;
  server 194.95.75.10:30182;
}

# HTTP server to redirect all 80 traffic to SSL/HTTPS
server {
    listen 80;
    server_name notebooks-test.gesis.org 194.95.75.10;
    access_log off;  # turn off access log
    # Tell all requests to port 80 to be 301 (permanently) redirected to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443;
    ssl on;

    server_name notebooks-test.gesis.org 194.95.75.10;

    ssl_certificate /etc/letsencrypt_volume/live/notebooks-test.gesis.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt_volume/live/notebooks-test.gesis.org/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/letsencrypt_volume/dhparam_test.pem;
    ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS";
    # https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/#https-server-optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;  # 50mb shared session cache
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security max-age=15768000;

    # optimization
    access_log off;  # turn off access log
    client_body_buffer_size 128k;  # default is 8k|16k;
    client_max_body_size 1G;  # default is 1M
    proxy_buffers 32 32k;
    proxy_buffer_size 32k;

    location = /favicon.ico { access_log off; log_not_found off; }

    # Managing literal requests to orc site app
    location / {
        proxy_pass http://orc-site;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Managing literal requests to the BinderHub
    location /binder/ {
        #auth_basic "Login required";
        #auth_basic_user_file /etc/nginx/.htpasswd/.htpasswd_test;

        proxy_buffering off;
        proxy_pass http://bhub;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    # For JupyterHub of Binder
    location /binder/jupyter/ {
        proxy_pass http://bjhub;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # Managing requests to the binder service of JupyterHub
    location /jupyter/services/binder/ {
        # http://www.tornadoweb.org/en/stable/guide/running.html#running-behind-a-load-balancer
        # https://serverfault.com/questions/263022/http-streaming-server-behind-nginx
        proxy_buffering off;

        proxy_pass http://jhub;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    # Managing literal requests to the JupyterHub front end
    # with only a specific sub-path causes Shibboleth authentication.
    location /jupyter/ {
        proxy_pass http://jhub;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # websocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    # FastCGI authorizer for Auth Request module
    location = /shibauthorizer {
        internal;
        include fastcgi_params;
        fastcgi_pass unix:/var/run/shibboleth/shibauthorizer.sock;
    }

    # FastCGI responder
    location /Shibboleth.sso {
        include fastcgi_params;
        fastcgi_buffers 256 4k;
        fastcgi_pass unix:/var/run/shibboleth/shibresponder.sock;
    }

    # ignore fonts of JupyterHub and BinderHub (they not found anyway when base url is different than /)
    location ~* ^/jupyter/hub/static/fonts/.+\.(woff|woff2|ttf)$
    {
        return 404;
    }
    location ~* ^/static/dist/.+\.(woff|woff2|ttf)$
    {
        return 404;
    }
}
