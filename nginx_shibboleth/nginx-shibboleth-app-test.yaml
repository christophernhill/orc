apiVersion: v1
kind: Service
metadata:
  name: nginx-shibboleth-test
  labels:
    app: nginx-shibboleth-test
spec:
  selector:
    app: nginx-shibboleth-test
  ports:
  - name: http
    protocol: TCP
    targetPort: 80
    port: 80
  - name: https
    protocol: TCP
    targetPort: 443
    port: 443
  externalIPs:
    - 194.95.75.10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-shibboleth-test
  labels:
    app: nginx-shibboleth-test
spec:
  replicas: 1
  # The selector field defines how the Deployment finds which Pods to manage.
  selector:
    matchLabels:
      app: nginx-shibboleth-test
  template:
    metadata:
      name: nginx-shibboleth-test
      labels:
        app: nginx-shibboleth-test
      # annotations:
        # TODO when helm is used, we can checksum config and secret files
        # https://github.com/kubernetes/helm/blob/master/docs/charts_tips_and_tricks.md#automatically-roll-deployments-when-configmaps-or-secrets-change
        # This lets us autorestart when the configmaps/secrets change!
        #checksum/config: {{ include (print "~/ilcm/orc/nginx/k8s_test") . | sha256sum }}
        # We are now using a trick to restart the hub whenever the hash of the hub's configmap changes. --> do the same for orc apps
        # https://github.com/jupyterhub/zero-to-jupyterhub-k8s/pull/922
        # This lets us autorestart when the configmap changes!
        # checksum/config-map: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        # checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      nodeSelector:
        # assign this pod to staging server
        staging: worker
      containers:
      - name: nginx-shibboleth-test
        image: nginx:1.13.6
        resources:
          requests:
            cpu: "0.5"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: letsencrypt-volume
          mountPath: "/etc/letsencrypt_volume"
          readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-configmap
      - name: letsencrypt-volume
        hostPath:
          path: /etc/letsencrypt