<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
          xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
          xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
          xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"
          xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
          clockSkew="180">

    <!--
    By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
    are used. See example-shibboleth2.xml for samples of explicitly configuring them.
    -->

    <!--
    To customize behavior for specific resources on Apache, and to link vhosts or
    resources to ApplicationOverride settings below, use web server options/commands.
    See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfigurationElements for help.
    
    For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
    file, and the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPRequestMapHowTo topic.
    -->

    <!-- https://github.com/nginx-shib/nginx-http-shibboleth/blob/master/CONFIG.rst#configuring-shibboleths-shibboleth2xml-to-recognise-secured-paths -->
    <RequestMapper type="XML">
        <RequestMap>
            <Host name="notebooks.gesis.org"
                  authType="shibboleth"
                  requireSession="true"
                  redirectToSSL="443">
                <Path name="/hub/login" />
                <!-- other Path, PathRegex or Query elements here -->
            </Host>
            <!-- other Host or HostRegex elements here -->
        </RequestMap>
    </RequestMapper>

    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
    <ApplicationDefaults entityID="https://notebooks.gesis.org/shibboleth" REMOTE_USER="uid persistent-id targeted-id"
                         sessionHook="/Shibboleth.sso/AttrChecker" metadataAttributePrefix="Meta-">
        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        You MUST supply an effectively unique handlerURL value for each of your applications.
        The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
        a relative value based on the virtual host. Using handlerSSL="true", the default, will force
        the protocol to be https. You should also add a cookieProps setting of "; path=/; secure"
        in that case. Note that while we default checkAddress to "false", this has a negative
        impact on the security of the SP. Stealing cookies/sessions is much easier with this disabled.
        -->
        <Sessions lifetime="28800" timeout="3600" checkAddress="false" relayState="ss:mem" handlerSSL="true"  cookieProps="https">

            <!--
            Configures SSO for a default IdP. To allow for >1 IdP, remove
            entityID property and adjust discoveryURL to point to discovery service.
            (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
            You can also override entityID on /Login query string, or in RequestMap/htaccess.
            -->
            <SSO discoveryProtocol="SAMLDS"
                 discoveryURL="https://notebooks.gesis.org"
                 target="https://notebooks.gesis.org/hub/login">
                SAML2 SAML1
            </SSO>
            <!-- NOTE: non-test url: https://wayf.aai.dfn.de/DFN-AAI/wayf/WAYF -->
            <!--SSO discoveryProtocol="SAMLDS" discoveryURL="https://wayf.aai.dfn.de/DFN-AAI-Test/wayf">
                SAML2
            </SSO-->

            <!-- SAML and local-only logout. -->
            <Logout asynchronous="false">SAML2 Local</Logout>

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <!--Handler type="MetadataGenerator" Location="/Metadata" signing="true"/-->
            <!-- https://clarin-eric.github.io/SPF-tutorial/Shib_SP_tutorial.html#_saml_metadata_template -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"
                     template="metadata.xml"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="true"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>

            <!-- Attribute Checker Handler  -->
            <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPHandler  -->
            <Handler type="AttributeChecker" Location="/AttrChecker" template="attrChecker.html"
                     attributes="mail givenName sn" flushSession="true"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add attributes with values that can be plugged into the templates.
        -->
        <!-- NOTE: There are error templates under /etc/shibboleth/
         https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPErrors
         -->
        <Errors supportContact="notebooks@gesis.org"
                helpLocation="https://notebooks.gesis.org/about/"
                logoLocation="/static/images/logo/logo.svg"
                styleSheet="/static/eds/main.css"/>

        <!-- Example of remotely supplied batch of signed metadata. -->
        <!--
        <MetadataProvider type="XML" uri="http://federation.org/federation-metadata.xml"
              backingFilePath="federation-metadata.xml" reloadInterval="7200">
            <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
            <MetadataFilter type="Signature" certificate="fedsigner.pem"/>
        </MetadataProvider>
        -->
        <!--
        https://clarin-eric.github.io/SPF-tutorial/Shib_SP_tutorial.html#_specifying_spf_idps
        Your SP needs to know which Identity Providers (IdPs) its users may come from.
        https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPMetadataProvider#NativeSPMetadataProvider-XMLMetadataProvider
        -->
        <MetadataProvider type="Chaining">
            <!--NOTE: https://www.aai.dfn.de/fileadmin/metadata/dfn-aai-test-metadata.xml-->
            <MetadataProvider type="XML" uri="https://www.aai.dfn.de/fileadmin/metadata/dfn-aai-basic-metadata.xml"
                              backingFilePath="dfn-aai-basic-metadata.xml" legacyOrgNames="true" reloadInterval="3600">
                <MetadataFilter type="RequireValidUntil" maxValidityInterval="604800"/>
                <MetadataFilter type="Signature" certificate="/etc/shibboleth/dfn-aai.g2.pem"/>
                <!--MetadataFilter type="Whitelist">
                    <Include>https://idp.uni-beispiel1.de/idp/shibboleth</Include>
                    <Include>https://idp.uni-beispiel2.de/idp/shibboleth</Include>
                    <Include>https://idp.uni-beispiel3.de/idp/shibboleth</Include>
                </MetadataFilter-->
            </MetadataProvider>
        </MetadataProvider>

        <!-- Example of locally maintained metadata. -->
        <!--
        <MetadataProvider type="XML" file="partner-metadata.xml"/>
        -->

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>

        <!-- Extract further attributes about Identity Providers from metadata -->
        <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPAttributeExtractor#NativeSPAttributeExtractor-MetadataAttributeExtractor(Version2.5andAbove) -->
        <AttributeExtractor type="Metadata"
                            errorURL="errorURL"
                            DisplayName="displayName"
                            InformationURL="informationURL"
                            PrivacyStatementURL="privacyStatementURL"
                            OrganizationURL="organizationURL">
            <!-- To extract support information for IdP from its metadata. -->
            <!-- The Attribute we need is the email address of the IdP support contact. -->
            <!-- https://github.com/CSCfi/shibboleth-attrchecker -->
            <ContactPerson id="Support-Contact"  contactType="support" formatter="$EmailAddress" />
            <Logo id="Small-Logo" height="16" width="16" formatter="$_string"/>
        </AttributeExtractor>

        <!-- Use a SAML query if no attributes are supplied during SSO. -->
        <AttributeResolver type="Query" subjectMatch="true"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <CredentialResolver type="File" key="/etc/shibboleth/tls/tls.key" certificate="/etc/shibboleth/tls/tls.crt"/>

        <!--
        The default settings can be overridden by creating ApplicationOverride elements (see
        the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApplicationOverride topic).
        Resource requests are mapped by web server commands, or the RequestMapper, to an
        applicationId setting.
        
        Example of a second application (for a second vhost) that has a different entityID.
        Resources on the vhost would map to an applicationId of "admin":
        -->
        <!--
        <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
        -->
    </ApplicationDefaults>
    
    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
